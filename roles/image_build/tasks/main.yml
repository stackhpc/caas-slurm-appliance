---

- name: Run prechecks
  include_tasks: prechecks.yml

- name: Create temporary file for pkrvars.hcl
  ansible.builtin.tempfile:
    state: file
    suffix: .pkrvars.hcl
  register: pkrvars_hcl_file

- name: Make Packer vars file
  template:
    src: builder.pkrvars.hcl.j2
    dest: "{{ pkrvars_hcl_file.path }}"

- name: Create temporary image-build inventory directory
  ansible.builtin.tempfile:
    state: directory
    prefix: image-build.
  register: image_build_inventory

- name: Symlink "everything" layout to image-build inventory
  file:
    state: link
    src: "{{ playbook_dir }}/vendor/stackhpc/ansible-slurm-appliance/environments/common/layouts/everything"
    dest: "{{ image_build_inventory.path }}/groups"

- name: Symlink CAAS group_vars to image-build inventory
  file:
    state: link
    src: "{{ playbook_dir }}/group_vars"
    dest: "{{ image_build_inventory.path }}/group_vars"

- name: Add builder vars to image-build inventory hosts file
  copy:
    dest: "{{ image_build_inventory.path }}/hosts"
    content: |
      {% raw %}
      localhost ansible_connection=local ansible_python_interpreter="{{ ansible_playbook_python }}"
      {% endraw %}
      [builder:vars]
      {% if image_build_ssh_bastion_host is defined %}
      ansible_ssh_common_args={{ image_build_ansible_ssh_common_args }}
      {% endif %}
      {% for k,v in image_build_builder_group_vars.items() -%}
      {{ k }}={{ v }}
      {% endfor -%}

- name: Create temporary file for ansible.cfg
  ansible.builtin.tempfile:
    state: file
    suffix: ansible.cfg
  register: ansible_cfg_file

- name: Template image-build ansible.cfg
  template:
    src: ansible.cfg.j2
    dest: "{{ ansible_cfg_file.path }}"

- name: Packer init
  command:
    cmd: |
      packer init .
    chdir: "{{ image_build_packer_root_path }}"

- name: Build image with packer
  command:
    cmd: |
      packer build -only openstack.openhpc -var-file={{ pkrvars_hcl_file.path }} openstack.pkr.hcl
    chdir: "{{ image_build_packer_root_path }}"
  environment:
    APPLIANCES_ENVIRONMENT_ROOT: "{{ image_build_appliances_environment_root }}"
    ANSIBLE_CONFIG: "{{ ansible_cfg_file.path }}"
    PACKER_LOG: "1"
    PACKER_LOG_PATH: "{{ lookup('ansible.builtin.env', 'PACKER_LOG_PATH', default='/tmp/packer-build.log') }}"

- name: Parse packer-manifest.json
  set_fact:
    packer_manifest: "{{ lookup('file', '/tmp/builder.manifest.json') | from_json }}"

- name: Extract image-build data
  set_fact:
    image_build_data: "{{ packer_manifest.builds | selectattr('packer_run_uuid', 'eq', packer_manifest.last_run_uuid) | first }}"
